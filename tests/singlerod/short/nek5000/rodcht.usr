c-----------------------------------------------------------------------
C
C  USER SPECIFIED ROUTINES:
C
C     - boundary conditions
C     - initial conditions
C     - variable properties
C     - local acceleration for fluid (a)
C     - forcing function for passive scalar (q)
C     - general purpose routine for checking errors etc.
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
      real t_

      udiff  = 0.01
      utrans = 1.0

      e  = gllel(eg)
      xx = xm1(ix,iy,iz,e)
      yy = ym1(ix,iy,iz,e)
      rr = sqrt(xx**2+yy**2)

      ! temperature in K
      t_ = t(ix,iy,iz,e,1)

      if (ifield.eq.2) then
      if (rr.lt.0.406) then
          ! fuel conductivity in W/cm-K
          udiff = 1.0/(4.52 + 2.46e-2*t_) + 3.5e7/(t_*t_) *
     $            exp(-16361.0/t_)
          utrans = 1.0    ! fuel rho-cp
      else if (rr.lt.0.414) then
          udiff  = 0.0001  ! gap conductivity in W/cm-K
          utrans = 0.1     ! gap rho-cp
      else if (rr.lt.0.475) then
          udiff  = 0.13  ! clad conductivity in W/cm-K
          utrans = 1.0   ! clad rho-cp
      endif
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,f,eg
      ffx=0.0
      ffy=0.0
      ffz=0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      ifflow=.false.
      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,ieg
      real ucx, ucy, ucz, ucy_e, yy

      e=gllel(ieg)

      ux = 0.0
      uy = 0.0
      uz = 50.0
      temp = 523.15
      flux = 0.25 !flux_recon(ix,iy,iz,e) !flux_moose

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer idum, e
      save    idum
      data    idum / 0 /

      if (idum.eq.0) idum = 99 + nid
      eps = .35

      uz=50.0
      uy=0.0
      ux=0.0
      temp=523.15

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'

      if (nid.eq.0) print *, "Test ***"

      param(66) = 6.   ! These give the std nek binary i/o and are
      param(67) = 4.   ! good default values
      ifuservp=.true.

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      include 'SIZE'
      include 'TOTAL'
c
      return
      end
